<template>
  <basic-container class="kwpolicy-content">
    <div class="kwpolicy-container">
      <div class="kwpolicy-container-title">
        <i class="el-icon-arrow-down"></i>文本标准化处理
      </div>
      <div class="kwpolicy-dismension-search-wrap"></div>
      <p class="kwpolicy-container-tip">
        将用户问中原始值经归一化处理转变为标准值后，再进行意图识别。有助于意图识别更加准确
      </p>
    </div>
    <div class="kwpolicy-table-header">
      <div class="kwpolicy-search-header-wrap clearfix">
        <div class="kwpolicy-operation-btns">
          <el-button
            type="success"
            class="kw-build-button kw-btn-green"
            size="small"
            @click="openRuleAddDialog('add')"
          >
            新增规则
          </el-button>
          <el-button
            type="success"
            class="kw-build-button kw-btn-blue"
            size="small"
            @click="delRule()"
          >
            批量删除
          </el-button>
        </div>
        <div class="kwpolicy-search-input-wrap clearfix">
          <div class="kwpolicy-search-input-row">
            <div class="kwpolicy-search-value">
              <div class="kwpolicy-search-input">
                <el-input
                  placeholder="请输入搜索内容"
                  size="small"
                  v-model="queryObj.content"
                ></el-input>
                <div class="kwpolicy-search-buttons">
                  <el-button
                    type="primary"
                    size="small"
                    class="kw-search-btn"
                    @click="searchChange"
                  >
                    <i class="el-icon-search"></i>
                  </el-button>
                  <el-button
                    size="small"
                    class="kw-reset-btn"
                    @click="searchReset"
                  >
                    <i class="aicosicon aicos-icon-clear"></i>
                  </el-button>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <avue-crud
      :option="ruleTableOption"
      :table-loading="loading"
      :data="ruleTableData"
      :page.sync="ruleTablePage"
      ref="kwpolicyTable"
      :permission="permissionList"
      @selection-change="selectionChange"
      @current-change="currentChange"
      @size-change="sizeChange"
      @on-load="onLoad"
    >
      
      <template slot-scope="scope" slot="menu">
        <el-button
          type="text"
          size="small"
          @click.stop="openEditRule(scope.row, scope.index)"
        >
          编辑
        </el-button>
        <el-button
          type="text"
          size="small"
          style="color: #ff0000"
          @click.stop="delRule(scope.row, scope.index, 'only')"
        >
          删除
        </el-button>
      </template>
    </avue-crud>
    <div class="kwpolicy-save-btn">
      <el-button size="small" @click="goback">{{$t("aicosCommon.cancelBtn")}}</el-button>
      <el-button size="small" type="primary" @click="savepolicy">{{$t("aicosCommon.saveBtn") }}</el-button>
    </div>
    <!-- 新增规则 -->
    <HuilanDialog
      append-to-body
      :visible.sync="isShowAddRuleDialog"
      width="600px"
      trigger="click"
    >
      <AddRule
        v-if="isShowAddRuleDialog"
        :ruleType="'add'"
        :strategyId="strategyId"
        @addOrEditEmitEvent="addOrEditEmitEvent"
        ref="addEditRule"
      />
      <template v-slot:footer>
        <el-button size="small" @click="isShowAddRuleDialog = false">{{
          $t("aicosCommon.cancelBtn")
        }}</el-button>
        <el-button size="small" type="primary" @click="saveAddUpdataRule">{{
          $t("aicosCommon.saveBtn")
        }}</el-button>
      </template>
    </HuilanDialog>
    <!-- 编辑规则 -->
    <HuilanDialog
      append-to-body
      :visible.sync="isShowEditRuleDialog"
      width="600px"
      trigger="click"
    >
      <AddRule
        v-if="isShowEditRuleDialog"
        :ruleId="ruleId"
        :ruleType="'edit'"
        :strategyId="strategyId"
        :ruleUpdataObj="ruleUpdataObj"
        @addOrEditEmitEvent="addOrEditEmitEvent"
        ref="addEditRule"
      />
      <template v-slot:footer>
        <el-button size="small" @click="isShowEditRuleDialog = false">{{
          $t("aicosCommon.cancelBtn")
        }}</el-button>
        <el-button size="small" type="primary" @click="saveAddUpdataRule">{{
          $t("aicosCommon.saveBtn")
        }}</el-button>
      </template>
    </HuilanDialog>
  </basic-container>
</template>
<script>
import { mapGetters } from "vuex";
import {
  loadIntentionalPolicyList,
  delIntentionalPolicy,
} from "@/api/kwRobot/kwRobotInstance/robotInstanceSetting/advaceStrategy/kwIntentionalPolicy";
import AddRule from "./addRule.vue";
export default {
  inject: ["desktopWindow", "desktop"],
  data() {
    return {
      allWindowTopBodyHeight: 0, // 窗口内容的高度
      botId: "",
      ruleId: "",
      strategyId: "", //策略id
      kwpolicyUpdataData: {}, //编辑携带数据
      isShowAddRuleDialog: false, //新增文件
      isShowEditRuleDialog: false, //编辑文件
      loading: false,
      queryObj: {
        content: "",
      },
      ruleTablePage: {
        pageSize: 10,
        currentPage: 1,
        total: 1,
      },
      ruleTableData: [],
      ruleTableOption: {
        searchShowBtn: false,
        refreshBtn: false,
        tip: false,
        searchShow: true,
        searchMenuSpan: 6,
        dialogWidth: "60%",
        columnBtn: false,
        border: true,
        index: false,
        addBtn: false,
        selection: true,
        editBtn: false,
        delBtn: false,
        viewBtn: false,
        menuWidth: 200,
        menuAlign: "center",
        dialogClickModal: false,
        labelWidth: 120,
        column: [
          {
            label: "标准值",
            prop: "standardValue",
            span: 12,
            minWidth: 280,
            showWordLimit: true,
            overHidden: true,
          },
          {
            label: "原始值",
            prop: "originalCount",
            span: 12,
            minWidth: 280,
            showWordLimit: true,
            overHidden: true,
          },
        ],
      },
      selectionList: [],
      vesionRecordIsShow: false,
    };
  },
  mounted() {
    if (this.desktopWindow) {
      this.allWindowTopBodyHeight =
        this.desktopWindow.$el.getElementsByClassName(
          "desk-window-inner"
        )[0].offsetHeight;

      this.desktopWindow.$on("resize", this.desktopWindowResize);
    }
  },
  components: {
    AddRule,
  },
  methods: {
    savepolicy(){
      let arr = [];
      this.ruleTableData.map(item=>{
        let obj = {};
        obj.synonymousPhrases = item.originalValueList;
        obj.standardPhrase = item.standardValue
        arr.push(obj)
      })
      let obj = {
        phraseNormalizeDic: arr,
      }
      this.$emit("fatherEvent",obj)
    },
    // 窗口改变，动态改变高度
    desktopWindowResize() {
      this.allWindowTopBodyHeight =
        this.desktopWindow.$el.getElementsByClassName(
          "desk-window-inner"
        )[0].offsetHeight;
    },

    onLoad() {
      this.loading = true;
      var obj = {
        strategyId: this.strategyId,
        // strategyId: 'cel12121212',
        current: this.ruleTablePage.currentPage,
        size: this.ruleTablePage.pageSize,
        standardValue: this.queryObj.content,
      };
      loadIntentionalPolicyList(obj).then((resData) => {
        resData = resData.data;
        if (resData.code == 200) {
          this.ruleTableData = resData.data.records;
          this.ruleTablePage.total = resData.data.total;
          this.loading = false;
        }
      });
    },

    // 搜索
    searchChange() {
      this.onLoad();
    },

    // 重置
    searchReset() {
      this.queryObj = {
        content: "",
      };
      this.onLoad();
    },

    //新增文件
    openRuleAddDialog() {
      this.ruleType = "add";
      this.isShowAddRuleDialog = true;
    },

    // 编辑文件
    openEditRule(row) {
      this.ruleType = "edit";
      this.ruleId = row.id;
      this.ruleUpdataObj = row;
      this.isShowEditRuleDialog = true;
    },

    //保存文件
    saveAddUpdataRule() {
      this.$refs.addEditRule.submit();
    },

    // 子组件的触发保存成功后关闭弹窗
    addOrEditEmitEvent(flag) {
      this.onLoad();
      this.isShowAddRuleDialog = flag;
      this.isShowEditRuleDialog = flag;
    },

    // 删除规则
    delRule(row, index, type) {
      var ids = [];
      var isOnlyStr = "";
      if (type == "only") {
        ids.push(row.id);
        isOnlyStr = "该";
      } else {
        if (this.selectionList.length == 0) {
          this.$message({
            type: "warning",
            message: "请选择文件！",
          });
          return false;
        }
        this.selectionList.forEach((item) => {
          ids.push(item.id);
        });
        isOnlyStr = "这些";
      }
      this.$confirm(`确定删除${isOnlyStr}文件吗？`, {
        confirmButtonText: this.$t("aicosCommon.confirmBtn"),
        cancelButtonText: this.$t("aicosCommon.cancelBtn"),
        type: "warning",
      })
        .then(() => {
          return delIntentionalPolicy(ids.join(","));
        })
        .then(() => {
          this.$message({
            type: "success",
            message: this.$t("aicosCommon.deleteSuccessTip"),
          });
          this.onLoad();
        });
    },

    selectionChange(list) {
      this.selectionList = list;
    },
    selectionClear() {
      this.selectionList = [];
      this.$refs.crud.toggleSelection();
    },
    currentChange(currentPage) {
      this.ruleTablePage.currentPage = currentPage;
    },
    sizeChange(pageSize) {
      this.ruleTablePage.pageSize = pageSize;
    },
  },
  computed: {
    // 计算属性
    ...mapGetters(["botObj", "instanceObj"]),
  },
  created() {
    this.botId = this.botObj.id;
    this.strategyId = this.instanceObj.id;
  },
};
</script>

<style lang="scss" scoped>
/deep/.kwpolicy-container {
  .kwpolicy-container-title {
    margin-left: 30px !important;
    margin-top: 0 !important;
  }
  .kwpolicy-container-tip {
    margin-left: 60px !important;
    font-size: 14px !important;
    color: #666 !important;
  }
  .kwpolicy-dismension-search-wrap {
    margin: 20px 0;
    border-bottom: 2px solid #f3f5f8;
  }
}
.kwpolicy-table-header {
  .kwpolicy-search-header-wrap {
    /*position: relative;
      padding-left: 120px;
      padding-right: 315px;*/

    .kwpolicy-search-select {
      position: absolute;
      left: 0;
      top: 0;
      width: 110px;
    }

    .kwpolicy-search-value {
      position: relative;

      .kwpolicy-search-input {
        /*width: 80%;*/
        min-width: 250px;
        display: inline-block;
        padding-right: 90px;
        position: relative;
      }

      .kwpolicy-search-buttons {
        position: absolute;
        right: 0;
        top: 0;

        .kw-search-btn {
          padding: 5px;
          i {
            font-size: 20px;
          }
        }

        .kw-reset-btn {
          padding: 5px;
          i {
            font-size: 20px;
          }
        }
      }
    }

    .kwpolicy-search-input-wrap {
      /*display: flex;
        justify-content: end;
        align-items: center;*/
      margin-top: 20px;

      .kwpolicy-search-input-row {
        float: right;
        position: relative;
        padding-left: 120px;
        padding-bottom: 20px;
      }
    }

    .kwpolicy-operation-btns {
      /* position: absolute;
        right: 0;
        top: 0;*/
      text-align: right;
      .el-dropdown {
        margin-left: 10px;
      }
    }
  }
  .choose-dismension {
    .choose-dismen-ul {
      display: flex;
      margin: 0;
      padding: 0;
      list-style: none;
      flex-flow: row wrap;

      li {
        margin: 0 8px 10px 0;
        border: 1px solid #308dee;
        height: 30px;
        line-height: 30px;
        padding: 0 10px;
        border-radius: 5px;
        font-size: 14px;

        span {
          display: inline-block;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .first-text {
          max-width: 100px;
        }

        .delimiter-text {
          vertical-align: top;
          margin-top: 5px;
          font-style: normal;
        }

        .last-text {
          color: #308dee;
          max-width: 120px;
        }

        .choose-del-icon {
          color: #308dee;
          display: inline-block;
          margin-left: 5px;
          cursor: pointer;
          vertical-align: top;
          margin-top: 8px;
        }
      }
    }
  }
}
/deep/ .avue-crud__menu {
  display: none;
}
.kwpolicy-save-btn {
  width: 140px;
  margin: auto;
}
</style>
